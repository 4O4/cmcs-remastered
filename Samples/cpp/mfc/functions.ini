[Function Names]
'
' Names of all functions available, in no particular order.
'
Func0 = CreateWindow
Func1 = MessageBox
Func2 = MessageBeep
Func3 = CloseWindow
Func4 = DestroyWindow
Func5 = FindWindow
Func6 = WriteFile
Func7 = CloseHandle
Func8 = CopyFile
Func9 = CreateFile
Func10 = DialogBoxParam
Func11 = IsWindow
Func12 = ZeroMemory
Func13 = ReadFile
Func14 = RegCreateKey
Func15 = RegCloseKey

[Function Prototypes]
'
' Prototypes for functions that are *not* overloaded, in same order as function names.
'
Func0 = HWND CreateWindow( LPCTSTR lpClassName, LPCTSTR lpWindowName, DWORD dwStyle, int x, int y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam )
Func1 = 
Func2 = BOOL MessageBeep( UINT uType )
Func3 = 
Func4 = 
Func5 = 
Func6 = BOOL WriteFile( HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped )
Func7 = BOOL CloseHandle( HANDLE hObject )
Func8 = BOOL CopyFile( LPCTSTR lpExistingFileName, LPCTSTR lpNewFileName, BOOL bFailIfExists )
Func9 = HANDLE CreateFile( LPCTSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile )
Func10 = INT_PTR DialogBoxParam( HINSTANCE hInstance, LPCTSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam )
Func11 = BOOL IsWindow( HWND hWnd )
Func12 = VOID ZeroMemory( PVOID Destination, SIZE_T Length )
Func13 = BOOL ReadFile( HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped )
Func14 = LONG RegCreateKey( HKEY hKey, LPCTSTR lpSubKey, PHKEY phkResult )
Func15 = LONG RegCloseKey( HKEY hKey )

[Overloads]
'
' Names of overloaded functions, and number of overloads
'
MessageBox = 1
CloseWindow = 1
DestroyWindow = 1
FindWindow = 1


'
' From here on down we list each function overload available...
'

[MessageBox0]
Func0 = int MessageBox( HWND hWnd, LPCTSTR lpText, LPCTSTR lpCaption, UINT uType )

[MessageBox1]
Func0 = int CWnd::MessageBox( LPCTSTR lpszText, LPCTSTR lpszCaption = NULL, UINT nType = MB_OK )

[CloseWindow0]
Func0 = BOOL CloseWindow( HWND hWnd )

[CloseWindow1]
Func0 = void CWnd::CloseWindow()

[DestroyWindow0]
Func0 = BOOL DestroyWindow( HWND hWnd )

[DestroyWindow1]
Func0 = BOOL CWnd::DestroyWindow()

[FindWindow0]
Func0 = HWND FindWindow( LPCTSTR lpClassName, LPCTSTR lpWindowName )

[FindWindow1]
Func0 = CWnd* CWnd::FindWindow( LPCTSTR lpszClassName, LPCTSTR lpszWindowName )
